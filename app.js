document.addEventListener('DOMContentLoaded', () => {
    const tg = window.Telegram.WebApp;
    // --- –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏ –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π URL —Ç–≤–æ–µ–≥–æ API ---
    const API_BASE_URL = "https://your-backend-domain.com"; 

    // --- –≠–ª–µ–º–µ–Ω—Ç—ã DOM ---
    const loaderEl = document.getElementById('loader');
    const mainContentEl = document.getElementById('main-content');
    const userGreetingEl = document.getElementById('user-greeting');
    const userStatusEl = document.getElementById('user-status');
    const userTrafficEl = document.getElementById('user-traffic');
    const userExpiresEl = document.getElementById('user-expires');
    const serverListEl = document.getElementById('server-list');
    const tariffListEl = document.getElementById('tariff-list');

    // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
    tg.ready();
    tg.expand(); // –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

    async function apiFetch(endpoint, options = {}) {
        // ... (–≤—Å—Ç–∞–≤—å —Å—é–¥–∞ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ apiFetch –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞)
    }

    // --- –§—É–Ω–∫—Ü–∏–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ ---
    function renderUserInfo(user, marzban) {
        userGreetingEl.innerText = `üëã –ü—Ä–∏–≤–µ—Ç, ${user.full_name}!`;
        userStatusEl.innerText = marzban.status === 'active' ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞';
        
        const usedGb = (marzban.used_traffic / (1024**3)).toFixed(2);
        const limitGb = marzban.data_limit > 0 ? (marzban.data_limit / (1024**3)).toFixed(0) : '‚àû';
        userTrafficEl.innerText = `${usedGb} / ${limitGb} GB`;

        if (marzban.expire && marzban.expire > 0) {
            const expireDate = new Date(marzban.expire * 1000);
            userExpiresEl.innerText = expireDate.toLocaleDateString('ru-RU');
        } else {
            userExpiresEl.innerText = '–ë–µ—Å—Å—Ä–æ—á–Ω–æ';
        }
    }
    
    // ... (–¥–æ–±–∞–≤—å —Å—é–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ renderServers –∏ renderTariffs)

    // --- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---
    async function main() {
        try {
            const [userInfoResponse, serversStatus, tariffs] = await Promise.all([
                apiFetch('/api/user/info', { method: 'POST' }), // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ API –≤–µ—Ä–Ω–µ—Ç –∏ –¥–∞–Ω–Ω—ã–µ Marzban
                apiFetch('/api/servers/status'),
                apiFetch('/api/tariffs/list')
            ]);
            
            // TODO: –ë—ç–∫–µ–Ω–¥ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–∞–Ω–Ω—ã–µ Marzban –≤–Ω—É—Ç—Ä–∏ /api/user/info
            // renderUserInfo(userInfoResponse.user, userInfoResponse.marzban);
            // renderServers(serversStatus);
            // renderTariffs(tariffs);

            mainContentEl.classList.remove('hidden');
            loaderEl.classList.add('hidden');
        } catch (error) {
            // ... (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫)
        }
    }
    
    main();
});
